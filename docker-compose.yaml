version: "3.9"
services:
  # airline-api:
  #   build: ../airline-backend
  #   restart: always
  #   ports:
  #     - 8081:8081
  db-user:
    image: mysql:8-debian
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=userdb
    volumes:
      - ./import-catalog.sql:/docker-entrypoint-initdb.d/import-catalog.sql
    ports:
      - "3308:3306"
  db-accommodation:
    image: mysql:8-debian
    restart: always
    environment:
      - MYSQL_DATABASE=accommodationdb
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - ./import-catalog-acc.sql:/docker-entrypoint-initdb.d/import-catalog-acc.sql
    ports:
      - "3309:3306"
  neo4j:
    build:
      context: .
      dockerfile: Dockerfile-neo4j
    restart: unless-stopped
    ports:
      - 7474:7474
      - 7687:7687
    volumes:
      - ./import.cyp:/var/lib/neo4j/import/import.cyp
  rabbitmq:
    image: rabbitmq:3.9.11-management
    ports:
      - "5672:5672" # RabbitMQ default port
      - "15672:15672" # RabbitMQ management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
  notification-api:
    build: ../notification-microservice
    restart: always
    ports:
      - "8088:8088"
      - "9088:9088"
  ## Prometheus
  prometheus:
    image: prom/prometheus:v2.37.1
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana-oss:8.5.2
    container_name: grafana
    restart: always
    ports:
      - "4000:3000"
    links:
      - prometheus:prometheus
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password

  promtail:
    image: grafana/promtail:2.2.1
    volumes:
      - ./shared:/var/log
      - ./promtail-config.yaml:/etc/promtail/promtail-config.yaml
    command: -config.file=/etc/promtail/promtail-config.yaml 

  loki:
    image: grafana/loki:2.2.1
    ports:
      - "4200:3100"
    volumes:
      - ./loki-config.yaml:/etc/loki/loki-config.yaml
    command: -config.file=/etc/loki/loki-config.yaml


  logstash:
    image: logstash:7.16.2
    container_name: logstash
    restart: always
    volumes:
      - type: volume
        source: shared
        target: /home
    ports:
    - '9600:9600'   
 
volumes:
  shared:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./shared
  # acommodation-api:
  #   build: ../accommodation-microservice
  #   restart: always
  #   ports:
  #     - 8084:8084
  # user-api:
  #   build: ../user-microservice
  #   restart: always
  #   ports:
  #     - 8083:8083
